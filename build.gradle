plugins {
    id 'io.qameta.allure' version '2.5'
    id 'ru.vyarus.quality' version '2.4.0'
    id 'com.github.ben-manes.versions' version '0.17.0'
}

group 'ru.ot76'
version '1.0'

apply plugin: 'java'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

sourceCompatibility = 1.8

configurations {
    agent
}

repositories {
    jcenter()
}

ext {
    aspectjweaverVersion = '1.8.13'
    testngVersion = '6.13.1'
    seleniumJavaVersion = '3.8.1'
    webdrivermanagerVersion = '3.4.0'
    ownerVersion = '1.0.9'
    lombokVersion = '1.16.18'
    streamExVersion = '0.6.6'
    joorVersion = '0.9.6'
    webdriverSupplierVersion = '0.8.0'
    allureTestngVersion = '2.0-BETA21'
    testDataSupplierVersion = '1.4.0'
    slf4SimplejVersion = '1.8.0-beta0'
    mockitoCoreVersion = '2.13.0'
    powermockApiMockito2Version = '2.0.0-beta.5'
    powermockModuleTestngVersion = '2.0.0-beta.5'
    assertjVersion = '3.8.0'
    findbugsVersion = '3.0.1'
    RestAssuredVersion = '3.2.0'
    RestAssuredJsonVersion = '3.0.5'
    RestAssuredSchemaValidatorVersion = '3.0.5'
}

dependencies {
    agent "org.aspectj:aspectjweaver:${aspectjweaverVersion}"
    compile("org.testng:testng:${testngVersion}",
            "org.seleniumhq.selenium:selenium-java:${seleniumJavaVersion}",
            "io.github.bonigarcia:webdrivermanager:${webdrivermanagerVersion}",
            "org.aeonbits.owner:owner-java8:${ownerVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            "one.util:streamex:${streamExVersion}",
            "org.jooq:joor:${joorVersion}",
            "io.github.sskorol:webdriver-supplier:${webdriverSupplierVersion}",
            "io.qameta.allure:allure-testng:${allureTestngVersion}",
            "io.github.sskorol:test-data-supplier:${testDataSupplierVersion}",
            "org.slf4j:slf4j-simple:${slf4SimplejVersion}",
            "org.mockito:mockito-core:${mockitoCoreVersion}",
            "org.powermock:powermock-api-mockito2:${powermockApiMockito2Version}",
            "org.powermock:powermock-module-testng:${powermockModuleTestngVersion}",
            "org.assertj:assertj-core:${assertjVersion}",
            "com.google.code.findbugs:findbugs:${findbugsVersion}",
            "io.rest-assured:rest-assured:${RestAssuredVersion}",
            "io.rest-assured:json-path:${RestAssuredJsonVersion}",
            "io.rest-assured:json-schema-validator:${RestAssuredSchemaValidatorVersion}"

    )
}

task copyConfig(type: Copy) {
    from 'src/test/resources/config'
    into 'build/allure-results'
}

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG() {
        suites 'src/test/resources/smoke-suite.xml'
    }

    systemProperty 'allure.results.directory', 'build/allure-results'
}

test.dependsOn copyConfig

allure {
    autoconfigure = true
    version = '2.4.1'
}